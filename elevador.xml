<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int numAndares = 6;
//#define numAndares

chan chamaElevador, esperaElevador, usuarioEntrou, chegou, usuarioSaiu, escolheDestino, acaoDestino, acaoOrigem, fecharPorta, abrirPorta;
int numPessoasDentro = 0;
//int noAndar =  0;
//int test=1;
int destino, origem = -1;
bool portaAberta = false;
bool movimento = 0;
int objetoBloqueante = 0;
int direcao = 0;



//Requisicoes dos andares
chan pedidoDescida[numAndares], pedidoSubida[numAndares];
chan atendeuAndar[numAndares], pedidoDestino[numAndares];

chan andarAlcancado;

//Portas dos Andares
broadcast chan portaAbertaAndar[numAndares];   
//chan fecharPortaAndar[numAndares], abrirPortaAndar[numAndares];


//enum ESTADOS_ANDAR{SEM_PEDIDO = 0, PEDIDO_SUBIDA = 1, PEDIDO_DESCIDA= 2, PEDIDO_DESTINO=3};
int estado_andar[numAndares];



//int primeiro = 0, ultimo = 0;



//-----------------------------------------------------------------------------------------//
//Capacidade da fila de chamadas
const int capacidade = 20*(numAndares - 1);

int enter = 0, pos = 0;
int enter2 = 0, pos2 = 0;

int filaChamadasOrigem[capacidade];
int filaChamadasDestino[capacidade];

int i;

void add(int valor, bool selectQueue)
{
    if(pos == capacidade) return;

    if(selectQueue)
    {
        filaChamadasOrigem[pos] = valor;
        pos++;
    }
    else
    {
        filaChamadasDestino[pos2] = valor;
        pos2++;
    }
}

int remove(bool selectQueue)
{
    int aux;
    if(selectQueue)
    {    
        if(pos == 0) return -1; 
        aux = filaChamadasOrigem[0];
        for(i = 0; i &lt; pos; i++) 
        {
            filaChamadasOrigem[i] = filaChamadasOrigem[i + 1];
        }
        pos--;
    }
    else
    {   
        if(pos2 == 0) return -1; 
        aux=filaChamadasDestino[0];
        for(i = 0; i &lt; pos2; i++) 
        {
           filaChamadasDestino[i] = filaChamadasDestino[i + 1];
        }
        pos2--;
    }
    return aux;
}

//-----------------------------------------------------------------------------------------//</declaration>
	<template>
		<name>Usuario2</name>
		<parameter>int numViagens</parameter>
		<declaration>int[0,numAndares] andarAtualUsuario, andarDestinoUsuario;

bool cond_elevador_requisitado()
{
    return (andarAtualUsuario &gt;= andarDestinoUsuario &amp;&amp; (estado_andar[andarAtualUsuario] == 3 || estado_andar[andarAtualUsuario] == 2))||
           (andarAtualUsuario &lt;= andarDestinoUsuario &amp;&amp; (estado_andar[andarAtualUsuario] == 3 || estado_andar[andarAtualUsuario] == 1));
}

bool cond_destino_requisitado()
{
    return estado_andar[andarDestinoUsuario] == 3;
}</declaration>
		<location id="id0" x="-280" y="-493">
			<name x="-290" y="-527">Fim</name>
		</location>
		<location id="id1" x="-340" y="-59">
			<name x="-493" y="-85">Esperando_Destino</name>
		</location>
		<location id="id2" x="-340" y="-187">
			<name x="-493" y="-212">Dentro_do_Elevador</name>
		</location>
		<location id="id3" x="-340" y="-263">
			<name x="-501" y="-280">Esperando_Elevador</name>
		</location>
		<location id="id4" x="-340" y="-374">
			<name x="-467" y="-391">Fora_do_Elevador</name>
		</location>
		<location id="id5" x="-340" y="-442">
			<name x="-484" y="-467">Escolhendo_Destino</name>
		</location>
		<location id="id6" x="-340" y="-561">
			<name x="-384" y="-595">Inicial</name>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id5"/>
			<target ref="id0"/>
			<label kind="guard" x="-306" y="-476">numViagens == 0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-34" y="-459">portaAbertaAndar[andarDestinoUsuario]?</label>
			<label kind="assignment" x="-34" y="-493">andarAtualUsuario = andarDestinoUsuario,
numViagens--</label>
			<nail x="136" y="-68"/>
			<nail x="272" y="-263"/>
			<nail x="110" y="-425"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-289" y="-153">!cond_destino_requisitado()</label>
			<label kind="synchronisation" x="-306" y="-119">pedidoDestino[andarDestinoUsuario]!</label>
			<nail x="-306" y="-144"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-552" y="-144">cond_destino_requisitado()</label>
			<nail x="-374" y="-144"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-323" y="-246">portaAbertaAndar[andarAtualUsuario]?</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-442" y="-331">cond_elevador_requisitado()</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-297" y="-357">!cond_elevador_requisitado() &amp;&amp; andarAtualUsuario &lt;= andarDestinoUsuario &amp;&amp; andarAtualUsuario != numAndares-1</label>
			<label kind="synchronisation" x="-144" y="-323">pedidoSubida[andarAtualUsuario]!</label>
			<nail x="-297" y="-331"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-1037" y="-348">!cond_elevador_requisitado() &amp;&amp; andarAtualUsuario &gt;= andarDestinoUsuario &amp;&amp; andarAtualUsuario != 0</label>
			<label kind="synchronisation" x="-756" y="-314">pedidoDescida[andarAtualUsuario]!</label>
			<nail x="-383" y="-331"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="select" x="-510" y="-433">rnd : int[0,numAndares - 1]</label>
			<label kind="guard" x="-331" y="-425">numViagens != 0</label>
			<label kind="assignment" x="-527" y="-416">andarDestinoUsuario = rnd</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="select" x="-501" y="-552">rnd : int[0,numAndares -1 ]</label>
			<label kind="assignment" x="-501" y="-527">andarAtualUsuario = rnd</label>
		</transition>
	</template>
	<template>
		<name>Porta</name>
		<location id="id7" x="-365" y="-221">
			<name x="-399" y="-204">Fechada</name>
		</location>
		<location id="id8" x="-110" y="-221">
			<name x="-127" y="-204">Aberta</name>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-280" y="-323">fecharPorta?</label>
			<label kind="assignment" x="-297" y="-340">portaAberta = false</label>
			<nail x="-238" y="-306"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-280" y="-221">abrirPorta?</label>
			<label kind="assignment" x="-297" y="-204">portaAberta = true</label>
		</transition>
	</template>
	<template>
		<name>Andar</name>
		<parameter>int num</parameter>
		<location id="id9" x="-187" y="68">
			<name x="-272" y="59">semPedido</name>
			<label kind="testcodeEnter">estado_andar[num] = 0</label>
		</location>
		<location id="id10" x="-8" y="-102">
			<name x="-51" y="-144">Pedido_Subida</name>
			<label kind="testcodeEnter">estado_andar[num] = 1</label>
		</location>
		<location id="id11" x="0" y="229">
			<name x="-42" y="246">Pedido_Descida</name>
			<label kind="testcodeEnter">estado_andar[num] = 2</label>
		</location>
		<location id="id12" x="187" y="42">
			<name x="213" y="34">Pedido_Destino</name>
			<label kind="testcodeEnter">estado_andar[num] = 3;</label>
		</location>
		<init ref="id9"/>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="119" y="127">pedidoDestino[num]?</label>
			<label kind="assignment" x="76" y="144">add(num,false), 
estado_andar[num] = 3</label>
			<nail x="110" y="119"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="135" y="-42">pedidoDestino[num]?</label>
			<label kind="assignment" x="161" y="-25">add(num,false),
estado_andar[num] = 3</label>
			<nail x="93" y="-17"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-136" y="17">pedidoDestino[num]?</label>
			<label kind="assignment" x="-119" y="0">add(num,false),estado_andar[num] = 3</label>
			<nail x="-94" y="42"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-246" y="195">atendeuAndar[num]?</label>
			<label kind="assignment" x="-246" y="212">estado_andar[num] = 0</label>
			<nail x="-136" y="187"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-238" y="-93">atendeuAndar[num]?</label>
			<label kind="assignment" x="-246" y="-76">estado_andar[num] = 0</label>
			<nail x="-161" y="-34"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-59" y="85">atendeuAndar[num]?</label>
			<label kind="assignment" x="-59" y="68">estado_andar[num] = 0</label>
			<nail x="-18" y="81"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="161" y="178">pedidoSubida[num]?</label>
			<label kind="assignment" x="144" y="204">estado_andar[num] = 3</label>
			<nail x="153" y="187"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-93" y="136">pedidoDescida[num]?</label>
			<label kind="assignment" x="-110" y="102">add(num,true), 
estado_andar[num] = 2</label>
			<nail x="-93" y="144"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="170" y="-93">pedidoDescida[num]?</label>
			<label kind="assignment" x="170" y="-76">estado_andar[num] = 3</label>
			<nail x="161" y="-59"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-76" y="-34">pedidoSubida[num]?</label>
			<label kind="assignment" x="-93" y="-68">add(num,true), 
estado_andar[num] = 1</label>
			<nail x="-93" y="-26"/>
		</transition>
	</template>
	<template>
		<name>Controlador2</name>
		<declaration>//Parametros de posicao
int andarAtual = 0;
int andarObjetivo = -1;
bool tratandoOrigem;

//Temporizadores da porta
clock timerPorta;
const int tempoEsperaPorta = 10;

//-----------------------------------------------------Funcoes-----------------------------------------------------------------//
bool cond_abertura_porta()
{
    int est_andar = estado_andar[andarAtual];
    return ((est_andar == 3) || 
            (est_andar == 1 &amp;&amp; direcao != -1) || 
            (est_andar == 2 &amp;&amp; direcao != 1) || 
            (est_andar != 0 &amp;&amp; direcao == 0)) ||
            (andarAtual == andarObjetivo );
}


void def_direcao()
{
    if (andarAtual == andarObjetivo ) direcao = 0;
    else direcao = andarAtual &gt; andarObjetivo ? -1 : 1;
}</declaration>
		<location id="id13" x="-986" y="-85">
			<name x="-1105" y="-93">Fechando_Porta</name>
		</location>
		<location id="id14" x="-918" y="-85">
			<name x="-893" y="-93">Abrindo_Porta</name>
			<label kind="testcodeEnter">timerPorta = 0</label>
		</location>
		<location id="id15" x="-739" y="76">
			<name x="-714" y="68">Movendo</name>
			<label kind="testcodeEnter">movimento = true</label>
			<label kind="testcodeExit">movimento = false</label>
		</location>
		<location id="id16" x="-952" y="8">
			<name x="-1011" y="-42">Manipulando_Porta</name>
		</location>
		<location id="id17" x="-1173" y="8">
			<name x="-1266" y="-51">Processando_Req_Destino</name>
		</location>
		<location id="id18" x="-1453" y="68">
			<name x="-1580" y="59">Elevador_Livre</name>
		</location>
		<location id="id19" x="-1300" y="68">
			<name x="-1385" y="25">Selecao_Fila_Req</name>
		</location>
		<location id="id20" x="-1054" y="8">
			<name x="-1122" y="25">Definido_Direcao</name>
			<label kind="testcodeEnter">def_direcao()</label>
		</location>
		<location id="id21" x="-952" y="-127">
			<name x="-1020" y="-170">Arquivando_Requisicao</name>
		</location>
		<init ref="id18"/>
		<transition>
			<source ref="id14"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-875" y="-119">atendeuAndar[andarAtual]!</label>
			<label kind="assignment" x="-909" y="-136">andarObjetivo = (andarAtual == andarObjetivo) ? -1 : andarObjetivo</label>
			<nail x="-926" y="-110"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-1156" y="-127">portaAbertaAndar[andarAtual]!</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="guard" x="-1436" y="76">pos != 0 || pos2 != 0</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-918" y="85">andarAlcancado?</label>
			<label kind="assignment" x="-960" y="102">andarAtual = andarAtual + direcao,
movimento = false</label>
			<nail x="-859" y="76"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id18"/>
			<label kind="guard" x="-1258" y="212">andarObjetivo == -1</label>
			<nail x="-1045" y="195"/>
			<nail x="-1360" y="195"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id16"/>
			<label kind="guard" x="-1113" y="-76">!objetoBloqueante</label>
			<label kind="synchronisation" x="-1071" y="-59">fecharPorta!</label>
			<nail x="-986" y="-68"/>
			<nail x="-986" y="-34"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id14"/>
			<label kind="guard" x="-918" y="-68">cond_abertura_porta() &amp;&amp; andarObjetivo != -1</label>
			<label kind="synchronisation" x="-892" y="-51">abrirPorta!</label>
			<label kind="assignment" x="-901" y="-34">timerPorta = 0</label>
			<nail x="-926" y="-34"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id18"/>
			<label kind="guard" x="-1640" y="-8">estado_andar[andarObjetivo] == 0</label>
			<nail x="-1394" y="0"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id16"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id20"/>
			<label kind="guard" x="-1207" y="-34">estado_andar[andarObjetivo] != 0</label>
			<label kind="assignment" x="-1147" y="-17">def_direcao()</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="guard" x="-799" y="-8">andarAtual != andarObjetivo &amp;&amp; !cond_abertura_porta() &amp;&amp; andarObjetivo != -1</label>
			<label kind="assignment" x="-782" y="17">movimento = true</label>
			<nail x="-807" y="8"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id17"/>
			<label kind="assignment" x="-1258" y="51">tratandoOrigem = (pos2 != 0) ? 0:1,
andarObjetivo = remove(tratandoOrigem)</label>
		</transition>
	</template>
	<template>
		<name>SensorAndar</name>
		<declaration>clock tempoDeslocamento;</declaration>
		<location id="id22" x="-153" y="-42">
			<name x="-163" y="-76">Andar_invalido</name>
		</location>
		<location id="id23" x="-314" y="-42">
			<name x="-374" y="-76">Andar_valido</name>
		</location>
		<init ref="id23"/>
		<transition>
			<source ref="id22"/>
			<target ref="id23"/>
			<label kind="select" x="-314" y="42">randTempo: int[1,3]</label>
			<label kind="guard" x="-314" y="59">tempoDeslocamento &gt;= randTempo</label>
			<label kind="synchronisation" x="-280" y="25">andarAlcancado!</label>
			<nail x="-238" y="8"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id22"/>
			<label kind="guard" x="-289" y="-127">movimento == 1</label>
			<label kind="assignment" x="-314" y="-110">tempoDeslocamento = 0</label>
			<nail x="-255" y="-93"/>
		</transition>
	</template>
	<template>
		<name>SensorEstadoPorta</name>
		<location id="id24" x="-59" y="-85">
			<label kind="comments" x="-212" y="-246">ver coisa de peso / probabilidade</label>
		</location>
		<init ref="id24"/>
		<transition>
			<source ref="id24"/>
			<target ref="id24"/>
			<label kind="select" x="-119" y="-195">z : int[0,1]</label>
			<label kind="guard" x="-144" y="-178">portaAberta == true</label>
			<label kind="assignment" x="-144" y="-161">objetoBloqueante = z</label>
			<nail x="-110" y="-85"/>
			<nail x="-110" y="-136"/>
			<nail x="-59" y="-136"/>
		</transition>
	</template>
	<template>
		<name>Elevador</name>
		<location id="id25" x="-153" y="-153">
		</location>
		<location id="id26" x="-42" y="-51">
		</location>
		<location id="id27" x="68" y="-161">
			<name x="59" y="-195">Elevador_indo_a_origem</name>
		</location>
		<location id="id28" x="-42" y="-272">
			<label kind="comments" x="-153" y="-365">transformar em uma representacao do elevador em andares</label>
		</location>
		<init ref="id28"/>
		<transition>
			<source ref="id25"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="-153" y="-238">chegou!</label>
			<label kind="assignment" x="-178" y="-255">movimento = 0</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-178" y="-102">acaoDestino?</label>
			<label kind="assignment" x="-178" y="-85">movimento =1</label>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id26"/>
			<label kind="synchronisation" x="8" y="-110">esperaElevador!</label>
			<label kind="assignment" x="8" y="-93">movimento = 0</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="8" y="-255">acaoOrigem?</label>
			<label kind="assignment" x="0" y="-272">movimento = 1</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
//Usuarios
zee = Usuario2(1);
paulo = Usuario2(1);
carlos = Usuario2(1);

//Controlador
clp = Controlador2();

//Andares
andar0 = Andar(0);
andar1 = Andar(1);
andar2 = Andar(2);
andar3 = Andar(3);
andar4 = Andar(4);
andar5 = Andar(5);

//habitaculo = Elevador();
//Porta
portas = Porta();

//Sensores
sensor_de_andar = SensorAndar();
sensor_de_estado_da_porta = SensorEstadoPorta();


// List one or more processes to be composed into a system.
system zee, paulo, carlos, clp, andar0, andar1, andar2, andar3, andar4, andar5, portas, sensor_de_estado_da_porta, sensor_de_andar;</system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] movimento == 1 imply not portaAberta</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; zee.Fim and paulo.Fim and carlos.Fim</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] clp.movendo</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
